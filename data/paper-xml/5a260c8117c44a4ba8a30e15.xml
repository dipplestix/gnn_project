<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://arxiv.org/schemas/atom">
    <ns0:id>http://arxiv.org/abs/1708.06248v4</ns0:id>
    <ns0:updated>2017-12-08T22:02:14Z</ns0:updated>
    <ns0:published>2017-08-21T14:21:36Z</ns0:published>
    <ns0:title>GraphR: Accelerating Graph Processing Using ReRAM</ns0:title>
    <ns0:summary>  This paper presents GRAPHR, the first ReRAM-based graph processing
accelerator. GRAPHR follows the principle of near-data processing and explores
the opportunity of performing massive parallel analog operations with low
hardware and energy cost. The analog computation is suit- able for graph
processing because: 1) The algorithms are iterative and could inherently
tolerate the imprecision; 2) Both probability calculation (e.g., PageRank and
Collaborative Filtering) and typical graph algorithms involving integers (e.g.,
BFS/SSSP) are resilient to errors. The key insight of GRAPHR is that if a
vertex program of a graph algorithm can be expressed in sparse matrix vector
multiplication (SpMV), it can be efficiently performed by ReRAM crossbar. We
show that this assumption is generally true for a large set of graph
algorithms. GRAPHR is a novel accelerator architecture consisting of two
components: memory ReRAM and graph engine (GE). The core graph computations are
performed in sparse matrix format in GEs (ReRAM crossbars). The
vector/matrix-based graph computation is not new, but ReRAM offers the unique
opportunity to realize the massive parallelism with unprecedented energy
efficiency and low hardware cost. With small subgraphs processed by GEs, the
gain of performing parallel operations overshadows the wastes due to sparsity.
The experiment results show that GRAPHR achieves a 16.01x (up to 132.67x)
speedup and a 33.82x energy saving on geometric mean compared to a CPU baseline
system. Com- pared to GPU, GRAPHR achieves 1.69x to 2.19x speedup and consumes
4.77x to 8.91x less energy. GRAPHR gains a speedup of 1.16x to 4.12x, and is
3.67x to 10.96x more energy efficiency compared to PIM-based architecture.
</ns0:summary>
    <ns0:author>
      <ns0:name>Linghao Song</ns0:name>
    </ns0:author>
    <ns0:author>
      <ns0:name>Youwei Zhuo</ns0:name>
    </ns0:author>
    <ns0:author>
      <ns0:name>Xuehai Qian</ns0:name>
    </ns0:author>
    <ns0:author>
      <ns0:name>Hai Li</ns0:name>
    </ns0:author>
    <ns0:author>
      <ns0:name>Yiran Chen</ns0:name>
    </ns0:author>
    <ns1:comment>Accepted to HPCA 2018</ns1:comment>
    <ns0:link href="http://arxiv.org/abs/1708.06248v4" rel="alternate" type="text/html" />
    <ns0:link title="pdf" href="http://arxiv.org/pdf/1708.06248v4" rel="related" type="application/pdf" />
    <ns1:primary_category term="cs.DC" scheme="http://arxiv.org/schemas/atom" />
    <ns0:category term="cs.DC" scheme="http://arxiv.org/schemas/atom" />
    <ns0:category term="cs.AR" scheme="http://arxiv.org/schemas/atom" />
  </ns0:entry>
